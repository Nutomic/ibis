# Details about the PostgreSQL database connection
[database]
# Database connection url
connection_url = "postgres://ibis:password@localhost:5432/ibis"

# Database connection pool size
pool_size = 30

# Details of the initial admin account
[setup]
admin_username = "ibis"
admin_password = "ibis"

[federation]
# Domain name of the instance, mandatory for federation
domain = "example.com"

# Comma separated list of instances which are allowed for federation. If set, federation
# with other domains is blocked
# Optional
allowlist = "good.com,friends.org"

# Comma separated list of instances which are blocked for federation; optional
blocklist = "evil.com,bad.org"

[options]
# Whether users can create new accounts
registration_open = true

# Whether new users have to provide an email address to register
email_required = false
# Optional

[email]
# Connection parameters for email transport
# https://docs.rs/lettre/0.11.14/lettre/transport/smtp/struct.AsyncSmtpTransport.html#method.from_url
connection_url = "smtps://user:pass@hostname:port"

# Sender address for email sent by ibis
from_address = "ibis@example.com"

[[oauth_providers]]
# The OAuth 2.0 provider name displayed to the user on the Login page
display_name = "string"

# The issuer url of the OAUTH provider.
issuer = "https://www.rust-lang.org"

# The authorization endpoint is used to interact with the resource owner and obtain an
# authorization grant. This is usually provided by the OAUTH provider.
authorization_endpoint = "https://www.rust-lang.org"

# The token endpoint is used by the client to obtain an access token by presenting its
# authorization grant or refresh token. This is usually provided by the OAUTH provider.
token_endpoint = "https://www.rust-lang.org"

# The UserInfo Endpoint is an OAuth 2.0 Protected Resource that returns Claims about the
# authenticated End-User. This is defined in the OIDC specification.
userinfo_endpoint = "https://www.rust-lang.org"

# The client_id is provided by the OAuth 2.0 provider and is a unique identifier to this
# service
client_id = "string"

# The client_secret is provided by the OAuth 2.0 provider and is used to authenticate this
# service with the provider
client_secret = "string"

# Lists the scopes requested from users. Users will have to grant access to the requested scope
# at sign up.
scopes = "string"
