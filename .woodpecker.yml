variables:
  - &rust_image "rust:1.87"
  - &install_binstall "wget https://github.com/cargo-bins/cargo-binstall/releases/latest/download/cargo-binstall-x86_64-unknown-linux-musl.tgz && tar -xvf cargo-binstall-x86_64-unknown-linux-musl.tgz && cp cargo-binstall /usr/local/cargo/bin"
  - &install_cargo_leptos "cargo-binstall -y cargo-leptos@0.2.26"

steps:
  build_release:
    image: *rust_image
    environment:
      CARGO_HOME: .cargo_home
    commands:
      - apt-get update
      - apt-get install npm -y --no-install-recommends --no-install-suggests
      - npm install
      - *install_binstall
      - rustup target add wasm32-unknown-unknown
      - *install_cargo_leptos
      - export PATH="$PATH:$(pwd)/.cargo_home/bin/"
      - export RUSTFLAGS='--cfg getrandom_backend="wasm_js" -Ctarget-cpu=mvp'
      - export RUST_BACKTRACE=full
      - ./scripts/build_release.sh
      - cp target/release/ibis .

  cargo_test:
    image: *rust_image
    environment:
      CARGO_HOME: .cargo_home
    commands:
      - apt-get update
      - apt-get install postgresql sudo -y --no-install-recommends --no-install-suggests
      # dbinit (used by tests to create temp db) refuses to run as root so we need to setup another user
      - adduser testuser
      - cp /usr/local/rustup /home/testuser/.rustup -r
      - chown testuser:testuser . -R
      - chown testuser:testuser /home/testuser -R
      - sudo -u testuser env 
          "PATH=/usr/lib/postgresql/15/bin:/usr/local/cargo/bin:$PATH" 
          "DATABASE_URL=postgres://ibis:password@database:5432/ibis" 
          "IBIS_TEST_PARALLELISM=5" 
          "CARGO_HOME=$CARGO_HOME" 
          cargo test --no-fail-fast

  publish_release:
    image: woodpeckerci/plugin-release
    settings:
      files:
        - ibis.gz
      title: ${CI_COMMIT_TAG}
      prerelease: true
      api-key:
        from_secret: github_token
    when:
      - event: tag

  publish_release_docker:
    image: woodpeckerci/plugin-docker-buildx
    settings:
      repo: nutomic/ibis
      dockerfile: docker/Dockerfile_ci
      username:
        from_secret: docker_username
      password:
        from_secret: docker_password
      tag: ${CI_COMMIT_TAG}
    when:
      - event: tag

services:
  database:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: ibis
      POSTGRES_PASSWORD: password
